<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Halcyon days</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://lhalcyon.com/"/>
  <updated>2018-02-13T10:12:09.924Z</updated>
  <id>http://lhalcyon.com/</id>
  
  <author>
    <name>L</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>实现apk上传蒲公英后自动发送钉钉通知</title>
    <link href="http://lhalcyon.com/webhook_dingding-pgyer/"/>
    <id>http://lhalcyon.com/webhook_dingding-pgyer/</id>
    <published>2018-02-05T02:41:30.000Z</published>
    <updated>2018-02-13T10:12:09.924Z</updated>
    
    <content type="html"><![CDATA[<div class="note info"><p>Webhook是一个API概念，并且变得越来越流行。我们能用事件描述的事物越多，webhook的作用范围也就越大。Webhook作为一个轻量的事件处理应用，正变得越来越有用。</p><p>准确的说webhook是一种web回调或者http的push API，是向APP或者其他应用提供实时信息的一种方式。Webhook在数据产生时立即发送数据，也就是你能实时收到数据。这一种不同于典型的API，需要用了实时性需要足够快的轮询。这无论是对生产还是对消费者都是高效的，唯一的缺点是初始建立困难。</p><p>Webhook有时也被称为反向API，因为他提供了API规则，你需要设计要使用的API。Webhook将向你的应用发起http请求，典型的是post请求，应用程序由请求驱动。</p></div><p>在Android开发中会经常提交apk给测试人员进行测试,通常的做法是将构建完成的包上传至<a href="https://www.pgyer.com/" target="_blank" rel="noopener">蒲公英</a>,测试人员直接扫码下载并安装apk包从而进行测试.一般我们会将构建及发布过程自动化,可参考:</p><ol><li><a href="http://lhalcyon.com/linux-jenkins-gradle_build_android1/">Linux+Jenkins+Gradle构建Android参数化自动打包(一)</a></li><li><a href="http://lhalcyon.com/linux-jenkins-gradle_build_android2/">Linux+Jenkins+Gradle构建Android参数化自动打包(二)</a></li></ol><p>文章中实现了apk上传蒲公英后邮件通知,可是实际中,大家对邮件的关注远远没有对<code>IM</code>消息的关注度高,所以接下来本文将说明,实现<strong>上传apk后自动发送钉钉消息,将更新内容,apk版本号等信息通知到测试人员</strong></p><p><img src="https://ws1.sinaimg.cn/large/006tNc79gy1fo5p9j5pi0j30bs0ckjtu.jpg" alt=""></p><a id="more"></a><h4 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h4><p>首先环境搭建是<code>IntelliJ+SpringMVC+Gradle</code>构建的,如有疑问的同学可参考<a href="http://lhalcyon.com/ssm_build/">IDEA+Gradle创建MyBatis+SpringMVC项目</a>,项目中主要是对接口数据的调整及转发,实际上未用到<code>MyBatis</code>,可自行进行去除🙄.</p><h4 id="模型建立"><a href="#模型建立" class="headerlink" title="模型建立"></a>模型建立</h4><p>对照<a href="https://www.pgyer.com/doc/view/webhook_introduction" target="_blank" rel="noopener">蒲公英doc</a>、<a href="https://open-doc.dingtalk.com/docs/doc.htm?treeId=257&amp;articleId=105735&amp;docType=1" target="_blank" rel="noopener">钉钉doc</a>分别建立Java Bean.</p><p><code>PgyerMessage</code></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"action"</span>: <span class="string">"应用更新"</span>,</span><br><span class="line">  <span class="attr">"title"</span>: <span class="string">"OooPlay"</span>,</span><br><span class="line">  <span class="attr">"link"</span>: <span class="string">"https://www.pgyer.com/oooplay_test"</span>,</span><br><span class="line">  <span class="attr">"message"</span>: <span class="string">"您的应用OooPlay有了新的版本(2.4)更新。"</span>,</span><br><span class="line">  <span class="attr">"type"</span>: <span class="string">"updateVersion"</span>,</span><br><span class="line">  <span class="attr">"os_version"</span>: <span class="string">"2.4"</span>,</span><br><span class="line">  <span class="attr">"build_version"</span>: <span class="string">"139"</span>,</span><br><span class="line">  <span class="attr">"created"</span>: <span class="string">"2015-10-09 11:25:16"</span>,</span><br><span class="line">  <span class="attr">"updated"</span>: <span class="string">"2015-10-09 11:25:16"</span>,</span><br><span class="line">  <span class="attr">"timestamp"</span>: <span class="number">1444361118</span>,</span><br><span class="line">  <span class="attr">"appsize"</span>: <span class="string">"2238036"</span>,</span><br><span class="line">  <span class="attr">"device_type"</span>: 'iOS',</span><br><span class="line">  <span class="attr">"notes"</span>: <span class="string">"修复了一些小弱智的小bug"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PgyerMessage</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String action;</span><br><span class="line">    <span class="keyword">public</span> String title;</span><br><span class="line">    <span class="keyword">public</span> String link;</span><br><span class="line">    <span class="keyword">public</span> String message;</span><br><span class="line">    <span class="keyword">public</span> String type;</span><br><span class="line">    <span class="keyword">public</span> String os_version;</span><br><span class="line">    <span class="keyword">public</span> String build_version;</span><br><span class="line">    <span class="keyword">public</span> String created;</span><br><span class="line">    <span class="keyword">public</span> String updated;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> timestamp;</span><br><span class="line">    <span class="keyword">public</span> String appsize;</span><br><span class="line">    <span class="keyword">public</span> String device_type;</span><br><span class="line">    <span class="keyword">public</span> String notes;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"PgyerMessage&#123;"</span> +</span><br><span class="line">                <span class="string">"action='"</span> + action + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", title='"</span> + title + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", link='"</span> + link + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", message='"</span> + message + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", type='"</span> + type + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", os_version='"</span> + os_version + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", build_version='"</span> + build_version + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", created='"</span> + created + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", updated='"</span> + updated + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", timestamp="</span> + timestamp +</span><br><span class="line">                <span class="string">", appsize='"</span> + appsize + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", device_type='"</span> + device_type + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", notes='"</span> + notes + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此处有个小技巧,<code>IDEA IntelliJ</code>有个好用的插件<code>GsonFormat</code>可一键将<code>Json</code>字符串转换为<code>Java Model</code></p><p><img src="https://ws2.sinaimg.cn/large/006tNc79gy1fo5h69y1fmg30m20fnnbx.gif" alt=""></p><p>钉钉消息则分为几种类型,具体举例可参考<a href="https://open-doc.dingtalk.com/docs/doc.htm?treeId=257&amp;articleId=105735&amp;docType=1" target="_blank" rel="noopener">钉钉doc</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String TYPE_LINK = <span class="string">"link"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String TYPE_MARKDOWN = <span class="string">"markdown"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String TYPE_TEXT = <span class="string">"text"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String TYPE_ACTIONCARD = <span class="string">"actionCard"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String TYPE_FEEDCARD = <span class="string">"feedCard"</span>;</span><br></pre></td></tr></table></figure><p>此处我们选择<code>markdown</code>类型.为了便于拓展,此处将消息抽取了个基类<code>BaseDingMessage</code>.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BaseDingMessage</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String TYPE_LINK = <span class="string">"link"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String TYPE_MARKDOWN = <span class="string">"markdown"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String TYPE_TEXT = <span class="string">"text"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String TYPE_ACTIONCARD = <span class="string">"actionCard"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String TYPE_FEEDCARD = <span class="string">"feedCard"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String msgtype;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">public</span> AtBean at;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">AtBean</span> </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">boolean</span> isAtAll;</span><br><span class="line">        <span class="keyword">public</span> List&lt;String&gt; atMobiles;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MarkdownMessage</span>  <span class="keyword">extends</span> <span class="title">BaseDingMessage</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> MarkdownBean markdown;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">MarkdownBean</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> String title;</span><br><span class="line">        <span class="keyword">public</span> String text;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h4><p>首先在<code>build.gradle</code>中导入依赖</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">compile <span class="string">group:</span> <span class="string">'com.alibaba'</span>, <span class="string">name:</span> <span class="string">'fastjson'</span>, <span class="string">version:</span> <span class="string">'1.2.45'</span></span><br><span class="line">compile <span class="string">group:</span> <span class="string">'com.squareup.okhttp3'</span>, <span class="string">name:</span> <span class="string">'okhttp'</span>, <span class="string">version:</span> <span class="string">'3.9.0'</span></span><br></pre></td></tr></table></figure><p><code>fastjson</code>是用力啊转化<code>json</code>,<code>okhttp</code>用来网络请求</p><p><code>spring-mvc.xml</code>加入json配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:mvc</span>=<span class="string">"http://www.springframework.org/schema/mvc"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/mvc</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/mvc/spring-mvc.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 自动扫描控制器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.lhalcyon.webhook.controller"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 视图渲染 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"internalResourceViewResolver"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.InternalResourceViewResolver"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"prefix"</span> <span class="attr">value</span>=<span class="string">"/WEB-INF/views/"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"suffix"</span> <span class="attr">value</span>=<span class="string">".jsp"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 控制器映射器和控制器适配器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:annotation-driven</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mvc:message-converters</span> <span class="attr">register-defaults</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"supportedMediaTypes"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">value</span>&gt;</span>text/html;charset=UTF-8<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">value</span>&gt;</span>application/json<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">value</span>&gt;</span>application/xml;charset=UTF-8<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">mvc:message-converters</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mvc:annotation-driven</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 静态资源映射器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">mapping</span>=<span class="string">"/statics/**"</span> <span class="attr">location</span>=<span class="string">"/WEB-INF/statics/"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>消息发送服务<code>DingServiceImpl.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">Service</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DingServiceImpl</span> <span class="keyword">implements</span> <span class="title">DingService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger logger = Logger.getLogger(DingServiceImpl.class);</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">send</span><span class="params">(BaseDingMessage message,String url)</span> </span>&#123;</span><br><span class="line">        MediaType jsonType = MediaType.parse(<span class="string">"application/json; charset=utf-8"</span>);</span><br><span class="line">        okhttp3.RequestBody body = okhttp3.RequestBody.create(jsonType, JSON.toJSONString(message));</span><br><span class="line">        <span class="keyword">final</span> Request request = <span class="keyword">new</span> Request.Builder()</span><br><span class="line">                .url(url)</span><br><span class="line">                .post(body)</span><br><span class="line">                .build();</span><br><span class="line">        OkHttpClient client = OkhttpProvider.get();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            client.newCall(request).execute();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>蒲公英请求控制器<code>PgyerController.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/pgyer"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PgyerController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    DingService dingService;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger logger = Logger.getLogger(PgyerController.class);</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(value = <span class="string">"/update"</span>,method = RequestMethod.POST)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> BaseDingMessage <span class="title">apkUpdate</span><span class="params">(@RequestBody PgyerMessage pgyerMessage)</span></span>&#123;</span><br><span class="line">        BaseDingMessage dingMessage = WebhookConverter.pgyer2Ding(pgyerMessage);</span><br><span class="line">        dingService.send(dingMessage, Urls.DING_TEST);</span><br><span class="line">        logger.info(dingMessage);</span><br><span class="line">        <span class="keyword">return</span> dingMessage;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中<code>Urls.DING_TEST</code>为钉钉机器人的会话token地址,后面会说明如何创建/获取</p><p>消息转换器<code>WebhookConverter.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebhookConverter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger logger = Logger.getLogger(WebhookConverter.class);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> MarkdownMessage <span class="title">pgyer2Ding</span><span class="params">(PgyerMessage pgyerMessage)</span></span>&#123;</span><br><span class="line">        MarkdownMessage message = <span class="keyword">new</span> MarkdownMessage();</span><br><span class="line">        message.msgtype = BaseDingMessage.TYPE_MARKDOWN;</span><br><span class="line">        message.markdown = <span class="keyword">new</span> MarkdownMessage.MarkdownBean();</span><br><span class="line">        message.markdown.title = pgyerMessage.device_type + <span class="string">"蒲公英更新"</span>;</span><br><span class="line">        StringBuilder builder = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        builder.append(<span class="string">"#### "</span>).append(pgyerMessage.device_type).append(<span class="string">"测试包已更新! \n\n"</span>)</span><br><span class="line">        .append(<span class="string">"###### version: "</span>).append(pgyerMessage.os_version).append(<span class="string">" | build "</span>).append(pgyerMessage.build_version).append(<span class="string">"\n\n"</span>)</span><br><span class="line">        .append(<span class="string">"更新内容:\n"</span>).append(<span class="string">"&gt; "</span>).append(pgyerMessage.notes).append(<span class="string">"\n\n"</span>)</span><br><span class="line">        .append(<span class="string">"![qr_code_test](图片地址)\n\n"</span>)</span><br><span class="line">        .append(<span class="string">"[下载地址](https://www.pgyer.com/你的apk地址) 密码:你的密码\n"</span>).append(<span class="string">" @18810100000 @18810100001 @18818100002 "</span>);</span><br><span class="line"></span><br><span class="line">        message.markdown.text = builder.toString();</span><br><span class="line">        message.at = <span class="keyword">new</span> BaseDingMessage.AtBean();</span><br><span class="line">        message.at.isAtAll = <span class="keyword">false</span>;</span><br><span class="line">        message.at.atMobiles = Arrays.asList(<span class="string">"18818100000"</span>,<span class="string">"18818100001"</span>,<span class="string">"18818100002"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> message;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上需自行修改内容.</p><p>然后创建钉钉机器人.创建四连</p><p><strong>1</strong></p><p><img src="https://ws1.sinaimg.cn/large/006tKfTcgy1fo6gzkjikoj3090020wem.jpg" alt=""></p><p><strong>2</strong></p><p><img src="https://ws1.sinaimg.cn/large/006tKfTcgy1fo6gzmv1ouj30ic02o3yo.jpg" alt=""></p><p><strong>3</strong></p><p><img src="https://ws1.sinaimg.cn/large/006tKfTcgy1fo6gzpzdxtj30ib0ezq4b.jpg" alt=""></p><p><strong>4</strong></p><p><img src="https://ws4.sinaimg.cn/large/006tKfTcgy1fo6hhbxrdvj30id0eyjs7.jpg" alt=""></p><p>点此复制钉钉机器人会话token,建立<code>Urls.java</code>.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Urls</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 提测群机器人token</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    String DING_TEST = <span class="string">"钉钉token"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此处的<code>Ding_Test</code>即为上面复制的地址</p><p>至此,代码主要实现类已经完成,接下来需要去配置蒲公英<code>webhook</code></p><h4 id="配置webhook"><a href="#配置webhook" class="headerlink" title="配置webhook"></a>配置webhook</h4><p>打开<a href="https://www.pgyer.com/" target="_blank" rel="noopener">蒲公英</a>应用设置</p><p><img src="https://ws3.sinaimg.cn/large/006tKfTcgy1fo6hs1ezmcj31220ifwgj.jpg" alt=""></p><p><img src="https://ws1.sinaimg.cn/large/006tKfTcgy1fo6hylvq9ij30jw0dnq3q.jpg" alt=""></p><p>创建webhook,写入<code>PgyerController</code>的更新请求地址,如果配置与本文的相同,地址则为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://你的地址:端口/webhook-1.0-SNAPSHOT/pgyer/update</span><br></pre></td></tr></table></figure><p>其中<code>webhook-1.0-SNAPSHOT</code>为war包在tomcat解压后的名称</p><p><img src="https://ws4.sinaimg.cn/large/006tKfTcgy1fo6huk9u4yj30bo05rt9a.jpg" alt=""></p><p>done!  之后只要上传成功后,即有钉钉消息通知并@测试人员了! </p><p>让我们再看下打包后的消息通知!</p><p><img src="https://ws1.sinaimg.cn/large/006tNc79gy1fo5p9j5pi0j30bs0ckjtu.jpg" alt=""></p><p>类似的,代码<code>push</code>,<code>merge</code>也可以做成webhook消息.</p><p><code>Github</code>、<code>Gitlab</code>既有成熟的对接机器人.而笔者使用的<a href="https://coding.net/" target="_blank" rel="noopener">Coding</a>是没有与钉钉做对接的,此时可自定义机器人实现,有兴趣的同学可参考上面的教程自行实现.</p><p><img src="https://ws1.sinaimg.cn/large/006tNc79gy1fo710z7ywvj309t070aa2.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info&quot;&gt;&lt;p&gt;Webhook是一个API概念，并且变得越来越流行。我们能用事件描述的事物越多，webhook的作用范围也就越大。Webhook作为一个轻量的事件处理应用，正变得越来越有用。&lt;/p&gt;
&lt;p&gt;准确的说webhook是一种web回调或者http的push API，是向APP或者其他应用提供实时信息的一种方式。Webhook在数据产生时立即发送数据，也就是你能实时收到数据。这一种不同于典型的API，需要用了实时性需要足够快的轮询。这无论是对生产还是对消费者都是高效的，唯一的缺点是初始建立困难。&lt;/p&gt;
&lt;p&gt;Webhook有时也被称为反向API，因为他提供了API规则，你需要设计要使用的API。Webhook将向你的应用发起http请求，典型的是post请求，应用程序由请求驱动。&lt;/p&gt;&lt;/div&gt;
&lt;p&gt;在Android开发中会经常提交apk给测试人员进行测试,通常的做法是将构建完成的包上传至&lt;a href=&quot;https://www.pgyer.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;蒲公英&lt;/a&gt;,测试人员直接扫码下载并安装apk包从而进行测试.一般我们会将构建及发布过程自动化,可参考:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://lhalcyon.com/linux-jenkins-gradle_build_android1/&quot;&gt;Linux+Jenkins+Gradle构建Android参数化自动打包(一)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://lhalcyon.com/linux-jenkins-gradle_build_android2/&quot;&gt;Linux+Jenkins+Gradle构建Android参数化自动打包(二)&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;文章中实现了apk上传蒲公英后邮件通知,可是实际中,大家对邮件的关注远远没有对&lt;code&gt;IM&lt;/code&gt;消息的关注度高,所以接下来本文将说明,实现&lt;strong&gt;上传apk后自动发送钉钉消息,将更新内容,apk版本号等信息通知到测试人员&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ws1.sinaimg.cn/large/006tNc79gy1fo5p9j5pi0j30bs0ckjtu.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Webhook" scheme="http://lhalcyon.com/categories/Webhook/"/>
    
    
      <category term="Dingding" scheme="http://lhalcyon.com/tags/Dingding/"/>
    
      <category term="Webhook" scheme="http://lhalcyon.com/tags/Webhook/"/>
    
      <category term="Pgyer" scheme="http://lhalcyon.com/tags/Pgyer/"/>
    
  </entry>
  
  <entry>
    <title>Linux升级Glibc2.14中文乱码</title>
    <link href="http://lhalcyon.com/update_glibc_issue/"/>
    <id>http://lhalcyon.com/update_glibc_issue/</id>
    <published>2018-02-01T02:28:00.000Z</published>
    <updated>2018-02-04T08:03:16.352Z</updated>
    
    <content type="html"><![CDATA[<div class="note info"><p><code>CenterOS</code>上默认的<code>Glibc</code>版本为<code>2.12.1</code>,由于我们的Android项目使用到了<code>JNI</code>,将项目构建部署在服务器上时会遇到问题<code>&#39;GLIBC_2.14&#39; not found</code>,那么就需要升级<code>Glibc</code>至<code>2.14</code>.升级的教程网上很多,可是却漏掉了一个步骤,导致后面中文乱码的问题.本篇会做一个全面的解说</p></div><a id="more"></a><h4 id="1-Glibc下载"><a href="#1-Glibc下载" class="headerlink" title="1. Glibc下载"></a>1. Glibc下载</h4><p>首先从<a href="http://www.gnu.org/software/libc/" target="_blank" rel="noopener">Glibc Download</a>下载包,这里选择是<a href="http://ftp.gnu.org/gnu/glibc/glibc-2.14.tar.gz" target="_blank" rel="noopener">Glibc 2.14</a></p><h4 id="2-安装"><a href="#2-安装" class="headerlink" title="2. 安装"></a>2. 安装</h4><p>上传至服务器,进入目录解压</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar zxvf glibc-2.14.tar.gz</span><br></pre></td></tr></table></figure><p>进入解压后的目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd glibc-2.14</span><br></pre></td></tr></table></figure><p>接着</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mkdir /opt/build</span><br><span class="line">cd build</span><br><span class="line">../configure --prefix=/opt/glibc-2.14</span><br><span class="line">make -j4</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>若顺利的话,至此则安装成功了.</p><h5 id="issue"><a href="#issue" class="headerlink" title="issue"></a>issue</h5><p><strong>1. 在make install过程中出现错误:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Can&apos;t open configuration file /opt/glibc-2.14/etc/ld.so.conf: No such file or directory</span><br></pre></td></tr></table></figure><p>缺少了报错的编译文件<code>ld.so.conf</code>.通过find命令找到对应的文件配置</p><p><img src="https://ws1.sinaimg.cn/large/006tNc79ly1fo0wcs8mt3j30ap00vt8t.jpg" alt=""></p><p>然后拷贝文件至对应文件目录,继续编译</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp /etc/ld.so.conf /opt/glibc-2.14/etc/ </span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>编译成功,接着定义下环境变量即可</p><h4 id="3-补充"><a href="#3-补充" class="headerlink" title="3. 补充"></a>3. 补充</h4><div class="note warning"><p>通常的教程至此就结束了.最初笔者参考网上的教程也是做到这里.当时跑程序也没问题,直到前段时间大楼停电,服务器重启后,通过服务器上<code>Jenkins</code>打包上传到蒲公英的中文信息全是乱码! 相当于服务器的编码文件丢失了,所有中文都会乱码.</p><p>是因为遗漏了<code>localedata</code>未编译,在服务器重启后,<code>Glibc2.14</code>找不到对应版本<code>2.14</code>的<code>glibc locale</code>文件.</p></div><p><img src="https://ws4.sinaimg.cn/large/006tNc79ly1fo0rvnge0hj30es0363yp.jpg" alt=""></p><p>正确操作是,在<code>make</code>&amp;<code>make install</code>完成后继续编译local包</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make localedata/install-locales</span><br></pre></td></tr></table></figure><p>编译需要一些时间,完成后重启服务器即可生效</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shutdown -r now</span><br></pre></td></tr></table></figure><hr><ol><li>参考: <a href="http://blog.csdn.net/clirus/article/details/62425498" target="_blank" rel="noopener">http://blog.csdn.net/clirus/article/details/62425498</a></li><li>参考: <a href="http://blog.csdn.net/fzuzhanghao1993/article/details/77650500" target="_blank" rel="noopener">http://blog.csdn.net/fzuzhanghao1993/article/details/77650500</a></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info&quot;&gt;&lt;p&gt;&lt;code&gt;CenterOS&lt;/code&gt;上默认的&lt;code&gt;Glibc&lt;/code&gt;版本为&lt;code&gt;2.12.1&lt;/code&gt;,由于我们的Android项目使用到了&lt;code&gt;JNI&lt;/code&gt;,将项目构建部署在服务器上时会遇到问题&lt;code&gt;&amp;#39;GLIBC_2.14&amp;#39; not found&lt;/code&gt;,那么就需要升级&lt;code&gt;Glibc&lt;/code&gt;至&lt;code&gt;2.14&lt;/code&gt;.升级的教程网上很多,可是却漏掉了一个步骤,导致后面中文乱码的问题.本篇会做一个全面的解说&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://lhalcyon.com/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://lhalcyon.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>IDEA+Gradle创建MyBatis+SpringMVC项目</title>
    <link href="http://lhalcyon.com/ssm_build/"/>
    <id>http://lhalcyon.com/ssm_build/</id>
    <published>2018-01-29T01:58:20.000Z</published>
    <updated>2018-02-04T08:03:00.288Z</updated>
    
    <content type="html"><![CDATA[<div class="note info"><p>Gradle是一个基于Apache Ant和Apache Maven概念的项目自动化构建工具.它使用一种基于Groovy的特定领域语言(DSL)来声明项目设置,抛弃了基于XML的各种繁琐配置.</p><p>IDEA 全称IntelliJ IDEA,是java语言开发的集成环境,IntelliJ在业界被公认为最好的java开发工具之一,尤其在智能代码助手、代码自动提示、重构、J2EE支持、Ant、JUnit、CVS整合、代码审查、 创新的GUI设计等方面的功能可以说是超常的.</p></div><a id="more"></a><p>以上为百度的简介.从事Android的童鞋应该不难发现<code>Gradle</code>以及<code>Android Studio</code>的强(hen)大(ka).🤫而<code>AS</code>是基于<code>IntelliJ IDEA</code>开发的.习惯了<code>Gradle</code>的便捷,于是开始基于<code>Gradle</code>+<code>IDEA</code>构建<code>Java</code>项目.</p><h4 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h4><h5 id="1-数据库MySql"><a href="#1-数据库MySql" class="headerlink" title="1. 数据库MySql"></a>1. 数据库MySql</h5><p>在<a href="https://www.mysql.com/downloads/" target="_blank" rel="noopener">MySql Downloads</a>下载对应的版本并安装</p><p><img src="https://ws1.sinaimg.cn/large/006tNc79ly1fnyn5efs2vj306t05st8w.jpg" alt=""></p><div class="note warning"><p>此处笔者在<code>macOS</code>上安装<code>5.7.21</code>后打开系统偏好设置,遇到<code>无法加载MySql面板</code>的问题.一番搜索🔍后发现是macOS版本与MySql不兼容,选择低版本的MySql如<code>5.6.39</code>即可.</p></div><p><img src="https://ws3.sinaimg.cn/large/006tNc79ly1fnyncy23rdj30r404ndg9.jpg" alt=""></p><h5 id="2-IntelliJ-IDEA"><a href="#2-IntelliJ-IDEA" class="headerlink" title="2. IntelliJ IDEA"></a>2. IntelliJ IDEA</h5><p>请自行安(po)装(jie).</p><h5 id="3-Tomcat"><a href="#3-Tomcat" class="headerlink" title="3. Tomcat"></a>3. Tomcat</h5><p>请自行下载解压.如若是<code>macOS</code>或是<code>Linux</code>上解压后需进入<code>bin</code>目录执行下命令<code>chmod u+x *.sh</code>修改权限</p><h4 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h4><p>点击  Create New Project</p><p><img src="https://ws4.sinaimg.cn/large/006tNc79ly1fnynr052i2j30qc0kk75x.jpg" alt=""></p><p>选择基于Gradle的Java Web项目</p><p><img src="https://ws4.sinaimg.cn/large/006tNc79ly1fnyo6iusc6j30qc0kcjs5.jpg" alt=""></p><p>填写GroupId和ArtifactId</p><p><img src="https://ws4.sinaimg.cn/large/006tNc79ly1fnyo8vutcjj30qc0kcwfq.jpg" alt=""></p><p>选择gradle.可使用默认的,可使用本地的</p><p>接着选择项目目录,基本项目创建好了,接下来进入文件配置</p><h4 id="文件配置"><a href="#文件配置" class="headerlink" title="文件配置"></a>文件配置</h4><p>首先创建<code>java</code>和<code>resources</code>目录,并且创建包以及<code>web.xml</code>.</p><p><img src="https://ws2.sinaimg.cn/large/006tNc79ly1fnyqetghs0j309b0b4aai.jpg" alt=""></p><h5 id="log4j-properties"><a href="#log4j-properties" class="headerlink" title="log4j.properties"></a>log4j.properties</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">#设置日志的级别，定义日志信息的输出目的</span><br><span class="line">log4j.rootLogger=DEBUG, A1 ,R</span><br><span class="line">#定义A1的输出目的地为控制台</span><br><span class="line">log4j.appender.A1=org.apache.log4j.ConsoleAppender</span><br><span class="line">#布局为 PatternLayout 可以灵活地指定布局模式。</span><br><span class="line">log4j.appender.A1.layout=org.apache.log4j.PatternLayout</span><br><span class="line">#设置输出格式</span><br><span class="line">log4j.appender.A1.layout.ConversionPattern=%-d&#123;yyyy-MM-dd HH\:mm\:ss&#125; [%c]-[%p] %m%n</span><br><span class="line">#定义R的输出目的地为文件，并且文件大小到达指定尺寸的时候产生一个新的文件</span><br><span class="line">log4j.appender.R=org.apache.log4j.RollingFileAppender</span><br><span class="line">#设置输出的文件地址</span><br><span class="line">log4j.appender.R.File=/Users/xx/Documents/ServerLog</span><br><span class="line">#设置文件大小伟100 kb 文件到达100时，产生一个新文件，</span><br><span class="line">#MaxBackupIndex 最大记录的文件数为1 查过一个文件删除文件较早的。</span><br><span class="line">log4j.appender.R.MaxFileSize=100KB </span><br><span class="line">log4j.appender.R.MaxBackupIndex=1</span><br><span class="line">#以下和上面一样</span><br><span class="line">log4j.appender.R.layout=org.apache.log4j.PatternLayout</span><br><span class="line">log4j.appender.R.layout.ConversionPattern=%p %t %c - %m%n</span><br></pre></td></tr></table></figure><p>以上输出文件地址自行更改</p><h5 id="generatorConfig-xml"><a href="#generatorConfig-xml" class="headerlink" title="generatorConfig.xml"></a>generatorConfig.xml</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="meta">&lt;!DOCTYPE generatorConfiguration</span></span><br><span class="line"><span class="meta">        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"</span></span><br><span class="line"><span class="meta">        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd"&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">generatorConfiguration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">classPathEntry</span> <span class="attr">location</span>=<span class="string">"$&#123;jarDirection&#125;"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">context</span> <span class="attr">id</span>=<span class="string">"mysql"</span> <span class="attr">targetRuntime</span>=<span class="string">"MyBatis3"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">jdbcConnection</span> <span class="attr">driverClass</span>=<span class="string">"$&#123;driverClass&#125;"</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">connectionURL</span>=<span class="string">"$&#123;connectionURL&#125;"</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">userId</span>=<span class="string">"$&#123;userId&#125;"</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">password</span>=<span class="string">"$&#123;password&#125;"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">jdbcConnection</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">javaTypeResolver</span> &gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"forceBigDecimals"</span> <span class="attr">value</span>=<span class="string">"false"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">javaTypeResolver</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">javaModelGenerator</span></span></span><br><span class="line"><span class="tag">                <span class="attr">targetPackage</span>=<span class="string">"$&#123;modelPackage&#125;"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">targetProject</span>=<span class="string">"$&#123;src_main_java&#125;"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"enableSubPackages"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"trimStrings"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">javaModelGenerator</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">sqlMapGenerator</span></span></span><br><span class="line"><span class="tag">                <span class="attr">targetPackage</span>=<span class="string">"$&#123;sqlMapperPackage&#125;"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">targetProject</span>=<span class="string">"$&#123;src_main_java&#125;"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"enableSubPackages"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">sqlMapGenerator</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">javaClientGenerator</span> <span class="attr">type</span>=<span class="string">"XMLMAPPER"</span></span></span><br><span class="line"><span class="tag">                             <span class="attr">targetPackage</span>=<span class="string">"$&#123;mapperPackage&#125;"</span></span></span><br><span class="line"><span class="tag">                             <span class="attr">targetProject</span>=<span class="string">"$&#123;src_main_java&#125;"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"enableSubPackages"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">javaClientGenerator</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">        <span class="comment">&lt;!-- 每一个数据库表都对应一个对应的table属性 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">tableName</span>=<span class="string">"book"</span> <span class="attr">domainObjectName</span>=<span class="string">"Book"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">context</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">generatorConfiguration</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="gradle-properties"><a href="#gradle-properties" class="headerlink" title="gradle.properties"></a>gradle.properties</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 生成的model类所在包</span><br><span class="line">modelPackage=com.lhalcyon.webhook.domain</span><br><span class="line"># 生成的mapper接口类所在包</span><br><span class="line">mapperPackage=com.lhalcyon.webhook.mapper</span><br><span class="line"># 生成的mapper xml文件所在包</span><br><span class="line">sqlMapperPackage=com.lhalcyon.webhook.mapper</span><br></pre></td></tr></table></figure><p>为了方便扫描,将mapper xml以及接口类放在了同一包下了 😕</p><h5 id="jdbc-mysql-properties"><a href="#jdbc-mysql-properties" class="headerlink" title="jdbc-mysql.properties"></a>jdbc-mysql.properties</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 将jdbc.jarDirection后的内容更改为gradle下载的</span><br><span class="line"># mysql-connector-java-5.1.x.jar所在的路径，gradle自动下载的路径如下所示</span><br><span class="line">jdbc.jarDirection=/Users/ceyx/.gradle/caches/modules-2/files-2.1/mysql</span><br><span class="line">/mysql-connector-java/5.1.38/dbbd7cd309ce167ec8367de4e41c63c2c8593cc5</span><br><span class="line">/mysql-connector-java-5.1.38.jar</span><br><span class="line"></span><br><span class="line">jdbc.driverClassName=com.mysql.jdbc.Driver</span><br><span class="line">jdbc.url=jdbc:mysql://localhost:3306/halcyon</span><br><span class="line">jdbc.user=root</span><br><span class="line">jdbc.pass=root</span><br></pre></td></tr></table></figure><p>自行填写jdbc.jarDirection路径</p><h5 id="build-gradle"><a href="#build-gradle" class="headerlink" title="build.gradle"></a>build.gradle</h5><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line">group <span class="string">'com.lhalcyon'</span></span><br><span class="line">version <span class="string">'1.0-SNAPSHOT'</span></span><br><span class="line"></span><br><span class="line">apply <span class="string">plugin:</span> <span class="string">'java'</span></span><br><span class="line">apply <span class="string">plugin:</span> <span class="string">'war'</span></span><br><span class="line"></span><br><span class="line">sourceCompatibility = <span class="number">1.8</span></span><br><span class="line"></span><br><span class="line">repositories &#123;</span><br><span class="line">    mavenCentral()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">configurations &#123;</span><br><span class="line">    mybatisGenerator</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 读取config文件夹中对应的配置文件</span></span><br><span class="line">ext&#123;</span><br><span class="line">    <span class="keyword">def</span> prop = <span class="keyword">new</span> Properties();</span><br><span class="line">    file(<span class="string">"src/main/resources/config/mybatis/jdbc-mysql.properties"</span>)</span><br><span class="line">            .withInputStream &#123;</span><br><span class="line">        prop.load(it)</span><br><span class="line">    &#125;</span><br><span class="line">    file(<span class="string">"src/main/resources/config/mybatis/gradle.properties"</span>)</span><br><span class="line">            .withInputStream &#123;</span><br><span class="line">        prop.load(it)</span><br><span class="line">    &#125;</span><br><span class="line">    prop.each &#123;</span><br><span class="line">        project.extensions.add(<span class="string">"$it.key"</span>,it.value);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dependencies &#123;</span><br><span class="line">    testCompile <span class="string">group:</span> <span class="string">'junit'</span>, <span class="string">name:</span> <span class="string">'junit'</span>, <span class="string">version:</span> <span class="string">'4.12'</span></span><br><span class="line"></span><br><span class="line">    compile <span class="string">'org.codehaus.groovy:groovy-all:2.3.11'</span></span><br><span class="line">    compile <span class="string">'jstl:jstl:1.2'</span></span><br><span class="line">    compile <span class="string">'org.springframework:spring-aop:4.2.4.RELEASE'</span></span><br><span class="line">    compile <span class="string">'org.springframework:spring-context:4.2.4.RELEASE'</span></span><br><span class="line">    compile <span class="string">'org.springframework:spring-beans:4.2.4.RELEASE'</span></span><br><span class="line">    compile <span class="string">'org.springframework:spring-web:4.2.4.RELEASE'</span></span><br><span class="line">    compile <span class="string">'org.springframework:spring-webmvc:4.2.4.RELEASE'</span></span><br><span class="line">    compile <span class="string">'org.springframework:spring-tx:4.2.4.RELEASE'</span></span><br><span class="line">    compile <span class="string">'org.springframework:spring-jdbc:4.2.4.RELEASE'</span></span><br><span class="line">    compile <span class="string">'org.springframework:spring-test:4.2.4.RELEASE'</span></span><br><span class="line">    compile <span class="string">'mysql:mysql-connector-java:5.1.38'</span></span><br><span class="line">    compile <span class="string">'org.mybatis.generator:mybatis-generator-core:1.3.2'</span></span><br><span class="line">    compile <span class="string">'org.mybatis:mybatis-spring:1.2.3'</span></span><br><span class="line">    compile <span class="string">'org.mybatis:mybatis:3.3.0'</span></span><br><span class="line">    compile <span class="string">'junit:junit:4.12'</span></span><br><span class="line">    compile <span class="string">group:</span> <span class="string">'commons-dbcp'</span>, <span class="string">name:</span> <span class="string">'commons-dbcp'</span>, <span class="string">version:</span> <span class="string">'1.4'</span></span><br><span class="line">    compile <span class="string">group:</span> <span class="string">'org.aspectj'</span>, <span class="string">name:</span> <span class="string">'aspectjweaver'</span>, <span class="string">version:</span> <span class="string">'1.8.13'</span></span><br><span class="line">    compile <span class="string">group:</span> <span class="string">'log4j'</span>, <span class="string">name:</span> <span class="string">'log4j'</span>, <span class="string">version:</span> <span class="string">'1.2.17'</span></span><br><span class="line">    </span><br><span class="line">    mybatisGenerator <span class="string">'org.mybatis.generator:mybatis-generator-core:1.3.2'</span></span><br><span class="line">    mybatisGenerator <span class="string">'mysql:mysql-connector-java:5.1.38'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 利用ant创建一个自动生成MyBatis目录文件的task</span></span><br><span class="line">task mybatisGenerate &lt;&lt; &#123;</span><br><span class="line">    ant.properties[<span class="string">'targetProject'</span>] = projectDir.path</span><br><span class="line">    ant.properties[<span class="string">'jarDirection'</span>] = project[<span class="string">'jdbc.jarDirection'</span>]</span><br><span class="line">    ant.properties[<span class="string">'driverClass'</span>] = project[<span class="string">'jdbc.driverClassName'</span>]</span><br><span class="line">    ant.properties[<span class="string">'connectionURL'</span>] = project[<span class="string">'jdbc.url'</span>]</span><br><span class="line">    ant.properties[<span class="string">'userId'</span>] = project[<span class="string">'jdbc.user'</span>]</span><br><span class="line">    ant.properties[<span class="string">'password'</span>] = project[<span class="string">'jdbc.pass'</span>]</span><br><span class="line">    ant.properties[<span class="string">'src_main_java'</span>] = sourceSets.main.java.srcDirs[<span class="number">0</span>].path</span><br><span class="line">    ant.properties[<span class="string">'src_main_resources'</span>] = sourceSets.main.resources.srcDirs[<span class="number">0</span>].path</span><br><span class="line">    ant.properties[<span class="string">'modelPackage'</span>] = project[<span class="string">'modelPackage'</span>]</span><br><span class="line">    ant.properties[<span class="string">'mapperPackage'</span>] = project[<span class="string">'mapperPackage'</span>]</span><br><span class="line">    ant.properties[<span class="string">'sqlMapperPackage'</span>] = project[<span class="string">'sqlMapperPackage'</span>]</span><br><span class="line"></span><br><span class="line">    ant.taskdef(</span><br><span class="line"><span class="symbol">            name:</span> <span class="string">'mbgenerator'</span>,</span><br><span class="line"><span class="symbol">            classname:</span> <span class="string">'org.mybatis.generator.ant.GeneratorAntTask'</span>,</span><br><span class="line"><span class="symbol">            classpath:</span> configurations.mybatisGenerator.asPath</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    ant.mbgenerator(<span class="string">overwrite:</span> <span class="literal">true</span>,</span><br><span class="line"><span class="symbol">            configfile:</span> <span class="string">'src/main/resources/config/mybatis/generatorConfig.xml'</span>,</span><br><span class="line"><span class="symbol">            verbose:</span> <span class="literal">true</span>) &#123;</span><br><span class="line">        propertyset &#123;</span><br><span class="line">            propertyref(<span class="string">name:</span> <span class="string">'targetProject'</span>)</span><br><span class="line">            propertyref(<span class="string">name:</span> <span class="string">'jarDirection'</span>)</span><br><span class="line">            propertyref(<span class="string">name:</span> <span class="string">'userId'</span>)</span><br><span class="line">            propertyref(<span class="string">name:</span> <span class="string">'driverClass'</span>)</span><br><span class="line">            propertyref(<span class="string">name:</span> <span class="string">'connectionURL'</span>)</span><br><span class="line">            propertyref(<span class="string">name:</span> <span class="string">'password'</span>)</span><br><span class="line">            propertyref(<span class="string">name:</span> <span class="string">'src_main_java'</span>)</span><br><span class="line">            propertyref(<span class="string">name:</span> <span class="string">'src_main_resources'</span>)</span><br><span class="line">            propertyref(<span class="string">name:</span> <span class="string">'modelPackage'</span>)</span><br><span class="line">            propertyref(<span class="string">name:</span> <span class="string">'mapperPackage'</span>)</span><br><span class="line">            propertyref(<span class="string">name:</span> <span class="string">'sqlMapperPackage'</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接着<code>Sync</code>或者点击<code>Import Changes</code></p><p><img src="https://ws1.sinaimg.cn/large/006tNc79ly1fnyqi90urpj30d00bpgm1.jpg" alt=""></p><p>IDEA就会下载依赖包了.依赖版本号均源于<a href="http://mvnrepository.com/" target="_blank" rel="noopener">Maven Repository</a></p><h5 id="spring-mvc-xml"><a href="#spring-mvc-xml" class="headerlink" title="spring-mvc.xml"></a>spring-mvc.xml</h5><p><img src="https://ws4.sinaimg.cn/large/006tKfTcly1fnzjop49bzj30kr0fs76u.jpg" alt=""></p><p>导入依赖后,则可直接创建spring相关xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:mvc</span>=<span class="string">"http://www.springframework.org/schema/mvc"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/mvc</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/mvc/spring-mvc.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 自动扫描控制器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.lhalcyon.webhook.controller"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 视图渲染 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"internalResourceViewResolver"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.InternalResourceViewResolver"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"prefix"</span> <span class="attr">value</span>=<span class="string">"/WEB-INF/views/"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"suffix"</span> <span class="attr">value</span>=<span class="string">".jsp"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 控制器映射器和控制器适配器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:annotation-driven</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 静态资源映射器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">mapping</span>=<span class="string">"/statics/**"</span> <span class="attr">location</span>=<span class="string">"/WEB-INF/statics/"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="applicationContext-dao-xml"><a href="#applicationContext-dao-xml" class="headerlink" title="applicationContext-dao.xml"></a>applicationContext-dao.xml</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span> <span class="attr">xmlns:p</span>=<span class="string">"http://www.springframework.org/schema/p"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:aop</span>=<span class="string">"http://www.springframework.org/schema/aop"</span> <span class="attr">xmlns:tx</span>=<span class="string">"http://www.springframework.org/schema/tx"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 加载配置文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">location</span>=<span class="string">"classpath:config/mybatis/jdbc-mysql.properties"</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 数据库连接池 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"dataSource"</span> <span class="attr">class</span>=<span class="string">"org.apache.commons.dbcp.BasicDataSource"</span></span></span><br><span class="line"><span class="tag"><span class="attr">destroy-method</span>=<span class="string">"close"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driverClassName"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.driverClassName&#125;"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.url&#125;"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.user&#125;"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.pass&#125;"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxActive"</span> <span class="attr">value</span>=<span class="string">"10"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxIdle"</span> <span class="attr">value</span>=<span class="string">"5"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- mapper配置 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 让spring管理sqlsessionfactory 使用mybatis和spring整合包中的 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"sqlSessionFactory"</span> <span class="attr">class</span>=<span class="string">"org.mybatis.spring.SqlSessionFactoryBean"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 数据库连接池 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"dataSource"</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 自动扫描mapping.xml文件 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;property name="mapperLocations" value="classpath*:com/lhalcyon/mapper/*.xml"/&gt;--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 配置Mapper扫描器 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.mybatis.spring.mapper.MapperScannerConfigurer"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"basePackage"</span> <span class="attr">value</span>=<span class="string">"com.lhalcyon.webhook.mapper"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="applicationContext-service-xml"><a href="#applicationContext-service-xml" class="headerlink" title="applicationContext-service.xml"></a>applicationContext-service.xml</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span> <span class="attr">xmlns:p</span>=<span class="string">"http://www.springframework.org/schema/p"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:aop</span>=<span class="string">"http://www.springframework.org/schema/aop"</span> <span class="attr">xmlns:tx</span>=<span class="string">"http://www.springframework.org/schema/tx"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 配置包扫描器 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.lhalcyon.webhook.service"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="applicationContext-trans-xml"><a href="#applicationContext-trans-xml" class="headerlink" title="applicationContext-trans.xml"></a>applicationContext-trans.xml</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span> <span class="attr">xmlns:p</span>=<span class="string">"http://www.springframework.org/schema/p"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:aop</span>=<span class="string">"http://www.springframework.org/schema/aop"</span> <span class="attr">xmlns:tx</span>=<span class="string">"http://www.springframework.org/schema/tx"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 事务管理器 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"transactionManager"</span></span></span><br><span class="line"><span class="tag"><span class="attr">class</span>=<span class="string">"org.springframework.jdbc.datasource.DataSourceTransactionManager"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 数据源 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"dataSource"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 通知 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tx:advice</span> <span class="attr">id</span>=<span class="string">"txAdvice"</span> <span class="attr">transaction-manager</span>=<span class="string">"transactionManager"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 传播行为 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"insert*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"delete*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"update*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"query*"</span> <span class="attr">propagation</span>=<span class="string">"SUPPORTS"</span> <span class="attr">read-only</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"get*"</span> <span class="attr">propagation</span>=<span class="string">"SUPPORTS"</span> <span class="attr">read-only</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tx:advice</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 切面 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:advisor</span> <span class="attr">advice-ref</span>=<span class="string">"txAdvice"</span></span></span><br><span class="line"><span class="tag"><span class="attr">pointcut</span>=<span class="string">"execution(* com.lhalcyon.webhook.service.*.*(..))"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="web-xml"><a href="#web-xml" class="headerlink" title="web.xml"></a>web.xml</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">"http://java.sun.com/xml/ns/javaee"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://java.sun.com/xml/ns/javaee</span></span></span><br><span class="line"><span class="tag"><span class="string">  http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">"3.0"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 初始化spring 容器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:config/spring/applicationContext-*.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>org.springframework.web.context.ContextLoaderListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 配置前端控制器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>index-dispather<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath*:config/spring/spring-mvc.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>index-dispather<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 解决post乱码问题 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>utf-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="Tomcat部署"><a href="#Tomcat部署" class="headerlink" title="Tomcat部署"></a>Tomcat部署</h4><p>Run-&gt;Edit Configurations</p><p><img src="https://ws3.sinaimg.cn/large/006tKfTcly1fnzmln11yij30tg0k1adg.jpg" alt=""></p><p>有fix项点击配置即可,然后运行.</p><p><img src="https://ws3.sinaimg.cn/large/006tKfTcly1fnzn37f1aoj30pn0fwmxz.jpg" alt=""></p><h4 id="MyBatis配置"><a href="#MyBatis配置" class="headerlink" title="MyBatis配置"></a>MyBatis配置</h4><p>数据库管理工具笔者使用的是</p><p><img src="https://ws4.sinaimg.cn/large/006tKfTcly1fnzowf9ux6j304e03nwej.jpg" alt=""></p><p>首先创建数据库<code>halcyon</code>,接着创建<code>book</code>表,用于后面的mybatis generator</p><p><img src="https://ws4.sinaimg.cn/large/006tKfTcly1fnzp5ws50uj30lc0ayabp.jpg" alt=""></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> book (</span><br><span class="line">book_id <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span> AUTO_INCREMENT,</span><br><span class="line">book_name <span class="built_in">VARCHAR</span>(<span class="number">30</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">author <span class="built_in">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">default</span> <span class="string">'佚名'</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>然后在gradle创建mybatis generator task</p><p><img src="https://ws3.sinaimg.cn/large/006tKfTcly1fnzpb6bulwj30d50d5aap.jpg" alt=""></p><p><img src="https://ws4.sinaimg.cn/large/006tKfTcly1fnzpcwz6psj30k1041mxk.jpg" alt=""></p><p>运行task</p><p><img src="https://ws1.sinaimg.cn/large/006tKfTcly1fnzperdym0j30d40cfdgm.jpg" alt=""></p><p>运行成功后,会生成与数据库表对应的<code>java bean</code>与<code>dao</code>文件,即项目里的<code>Book.java</code>、<code>BookExample.java</code>、<code>BookMapper.xml</code>、<code>BookMapper.java</code></p><p><img src="https://ws4.sinaimg.cn/large/006tKfTcly1fnzpgj444lj307a04vjrn.jpg" alt=""></p><p><code>generatorConfig.xml</code>配置参数可自行搜索补充修改🤔.手动覆写下<code>Book</code>的<code>toString</code>方法方便日志输出</p><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><p>为了满足同时测试<code>Spring</code>、<code>SpringMVC</code>、<code>Mybatis</code>,笔者建立一个<code>Controller</code>通过<code>Get</code>请求进行<code>CURD</code>操作.</p><h5 id="Service"><a href="#Service" class="headerlink" title="Service"></a>Service</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BookServiceImpl</span> <span class="keyword">implements</span> <span class="title">BookService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> BookMapper bookMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">insertBook</span><span class="params">(Book book)</span> </span>&#123;</span><br><span class="line">        bookMapper.insert(book);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateBook</span><span class="params">(Book book)</span> </span>&#123;</span><br><span class="line">        bookMapper.updateByPrimaryKey(book);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Book&gt; <span class="title">getAllBooks</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        BookExample example = <span class="keyword">new</span> BookExample();</span><br><span class="line">        <span class="keyword">return</span> bookMapper.selectByExample(example);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteBookById</span><span class="params">(<span class="keyword">int</span> bookId)</span> </span>&#123;</span><br><span class="line">        BookExample example = <span class="keyword">new</span> BookExample();</span><br><span class="line">        example.createCriteria().andBookIdEqualTo(bookId);</span><br><span class="line">        bookMapper.deleteByExample(example);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Controller"><a href="#Controller" class="headerlink" title="Controller"></a>Controller</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BookController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span>  Logger logger = Logger.getLogger(BookController.class);</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> BookService bookService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(value = <span class="string">"/insert"</span>,method = RequestMethod.GET)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">insert</span><span class="params">(String bookName,String author)</span></span>&#123;</span><br><span class="line">        Book book = <span class="keyword">new</span> Book();</span><br><span class="line">        book.setBookName(bookName);</span><br><span class="line">        book.setAuthor(author);</span><br><span class="line">        bookService.insertBook(book);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> queryStrings();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/update"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">updateAuthor</span><span class="params">(<span class="keyword">int</span> bookId,String bookName,String author)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        Book book = <span class="keyword">new</span> Book();</span><br><span class="line">        book.setBookId(bookId);</span><br><span class="line">        book.setBookName(bookName);</span><br><span class="line">        book.setAuthor(author);</span><br><span class="line">        bookService.updateBook(book);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> queryStrings();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/delete"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">deleteBook</span><span class="params">(<span class="keyword">int</span> bookId)</span></span>&#123;</span><br><span class="line">        bookService.deleteBookById(bookId);</span><br><span class="line">        <span class="keyword">return</span> queryStrings();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/find_all"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getAllBooks</span><span class="params">()</span></span>&#123;</span><br><span class="line">        List&lt;Book&gt; books = bookService.getAllBooks();</span><br><span class="line">        logger.info(books);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> books.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">queryStrings</span><span class="params">()</span></span>&#123;</span><br><span class="line">        List&lt;Book&gt; allBooks = bookService.getAllBooks();</span><br><span class="line">        <span class="keyword">return</span> allBooks.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>直接通过请求地址,获得结果</p><p>插入:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:8080/webhook/insert?bookName=java&amp;author=jack</span><br></pre></td></tr></table></figure><p><img src="https://ws4.sinaimg.cn/large/006tKfTcly1fnztpvs98uj30hs041mxn.jpg" alt=""></p><p>执行后直接将数据库中所有book记录输出,方便观察.</p><p>其它操作类似</p><p>更新:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:8080/webhook/update?bookId=3&amp;bookName=go&amp;author=joe</span><br></pre></td></tr></table></figure><p>删除:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:8080/webhook/delete?bookId=4</span><br></pre></td></tr></table></figure><p>查询(所有):</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:8080/webhook/find_all</span><br></pre></td></tr></table></figure><div class="note warning"><p>如若发生<code>500 Invalid bound statement (not found)</code>类似错误,一般是没有扫描到Mapper.xml.其中一种情况下是xml根本没被打包进war.需要在<code>build.gradle</code>中进行配置,并且配置后<code>Sync或Import Changes</code>,再重新用命令<code>./gradlew build</code>才可生效.</p></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//将src文件夹中的资源文件同时打包</span><br><span class="line">processResources &#123;</span><br><span class="line">    from(&apos;src/main/java&apos;) &#123;</span><br><span class="line">        include &apos;**/*.xml&apos;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>至此SpringMVC+MyBatis+Gradle项目已经构建测试完毕.</p><p>代码已上传<a href="https://github.com/lhalcyon/ssm_basic/tree/master" target="_blank" rel="noopener">GayHub</a>,文章若对各位大佬有帮助,麻烦顺手点个star~ ❤️</p><p>各位可能发现了,<code>SSM</code>配置起来比较繁琐,相比之下,<code>SpringBoot</code>就精简了许多.后面有机会,我们再来细说 🤒</p><hr><ol><li>参考: <a href="https://www.cnblogs.com/bojuetech/p/5844413.html" target="_blank" rel="noopener">https://www.cnblogs.com/bojuetech/p/5844413.html</a></li><li>参考: <a href="http://blog.csdn.net/kingboyworld/article/details/78251425" target="_blank" rel="noopener">http://blog.csdn.net/kingboyworld/article/details/78251425</a></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info&quot;&gt;&lt;p&gt;Gradle是一个基于Apache Ant和Apache Maven概念的项目自动化构建工具.它使用一种基于Groovy的特定领域语言(DSL)来声明项目设置,抛弃了基于XML的各种繁琐配置.&lt;/p&gt;
&lt;p&gt;IDEA 全称IntelliJ IDEA,是java语言开发的集成环境,IntelliJ在业界被公认为最好的java开发工具之一,尤其在智能代码助手、代码自动提示、重构、J2EE支持、Ant、JUnit、CVS整合、代码审查、 创新的GUI设计等方面的功能可以说是超常的.&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="Java" scheme="http://lhalcyon.com/categories/Java/"/>
    
    
      <category term="IntelliJ" scheme="http://lhalcyon.com/tags/IntelliJ/"/>
    
      <category term="Spring" scheme="http://lhalcyon.com/tags/Spring/"/>
    
      <category term="SpringMVC" scheme="http://lhalcyon.com/tags/SpringMVC/"/>
    
      <category term="MyBatis" scheme="http://lhalcyon.com/tags/MyBatis/"/>
    
  </entry>
  
  <entry>
    <title>Android Studio版本兼容Api警告</title>
    <link href="http://lhalcyon.com/as_warning/"/>
    <id>http://lhalcyon.com/as_warning/</id>
    <published>2017-09-25T02:10:12.000Z</published>
    <updated>2018-02-04T08:02:13.101Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Android-Studio版本兼容Api警告"><a href="#Android-Studio版本兼容Api警告" class="headerlink" title="Android Studio版本兼容Api警告"></a>Android Studio版本兼容Api警告</h2><div class="note info"><p>最近在开发中,组内的小伙伴在开发中使用了高版本SDK25的Api,但是我们的项目最低兼容14,因此测试在5.1上的手机直接就崩溃了,问其在开发中没有看到警告吗,回复说确实没看到.后来查究一下,他的工具上确实没有显示.本文简述下如何手动去调整兼容Api的提示等级,避免在开发中用到高版本的Api却不自察.</p></div><p>首先win电脑是打开<code>Android Studio</code>的 <code>Setting</code>  ,mac是打开<code>Android Studio</code>的 <code>Preferences</code></p><p>选择<code>Editor</code>中的<code>Inspections</code> 对<code>Calling new methods on older versions</code>进行勾选并且配置为<code>Error</code>级别</p><p><img src="https://github.com/lhalcyon/RefImageRepo/raw/master/Hexo_170925/as_inspection_api_compatible.png" alt="api_compatible"></p><p>如此简单即可搞定.如遇到其他警告,错误代码没提示也可类似进行操作配置.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Android-Studio版本兼容Api警告&quot;&gt;&lt;a href=&quot;#Android-Studio版本兼容Api警告&quot; class=&quot;headerlink&quot; title=&quot;Android Studio版本兼容Api警告&quot;&gt;&lt;/a&gt;Android Studio版本兼
      
    
    </summary>
    
      <category term="Android" scheme="http://lhalcyon.com/categories/Android/"/>
    
    
      <category term="Android Studio" scheme="http://lhalcyon.com/tags/Android-Studio/"/>
    
  </entry>
  
  <entry>
    <title>Xcode代码提示问题处理</title>
    <link href="http://lhalcyon.com/xcode-idiot/"/>
    <id>http://lhalcyon.com/xcode-idiot/</id>
    <published>2017-08-15T05:32:45.000Z</published>
    <updated>2018-02-04T08:02:27.836Z</updated>
    
    <content type="html"><![CDATA[<div class="note info"><p>最近在写<code>Swift</code>.对于笔者这种被<code>JetBrains</code>的几大IDE工具给惯坏的开发者,Xcode的代码提示真是无力吐槽,先不论智能提示度,就连基本的提示也经常出不来.这里就简单总结下iOS同事传授的几招解决办法</p></div><h3 id="1-Clean-Project"><a href="#1-Clean-Project" class="headerlink" title="1.Clean Project"></a>1.Clean Project</h3><p>最直接的办法就是清空项目.</p><p>可视化按钮入口再哪请自行查找,笔者一般是用<code>Command+Shift+K</code>进行清空,此方法一般有效,缺点是会重新编译项目,比较慢</p><h3 id="2-清空Xcode缓存"><a href="#2-清空Xcode缓存" class="headerlink" title="2.清空Xcode缓存"></a>2.清空Xcode缓存</h3><p>前往Xcode的缓存目录,清空项目编译缓存.</p><p>具体操作为右键Finder<code>前往文件夹</code>文件夹路径为<code>/用户/ceyx/资源库/Developer/Xcode/DerivedData</code>  其中<code>ceyx</code> 替换为自己的用户名,删除目录下所有文件,然后重新打开Xcode,编译.</p><p><strong>此方法比1更慢,往往也更有效</strong></p><h3 id="3-终极大招"><a href="#3-终极大招" class="headerlink" title="3.终极大招"></a>3.终极大招</h3><p>如若上述两种方法还无效,只能使用绝招了…重启Xcode,还不行就重启电脑… 笔者黔驴技穷了,只能充当下网吧老板传授下终极大招.👻</p><p>题外话,对于JetBrains出品的appcode还未尝试过,不知对于Xcode项目兼容到何程度,是否支持Cocoapod等,有时间会去体验下,希望至少在代码提示上能更友善些😀</p><p>笔者去体验了下Appcode,其代码提示和快捷键如Jetbrains其他产品一样非常智能,但是代码中偶有飘红,却可以成功运行,比较干扰编码.尤为尴尬的一点是,Appcode不支持storyboard,即在项目内点开storyboard文件就直接跳转xcode了😥. 如真的被Xcode逼疯的童鞋可以考虑下用AppCode编码,用Xcode操作storyboard</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div class=&quot;note info&quot;&gt;&lt;p&gt;最近在写&lt;code&gt;Swift&lt;/code&gt;.对于笔者这种被&lt;code&gt;JetBrains&lt;/code&gt;的几大IDE工具给惯坏的开发者,Xcode的代码提示真是无力吐槽,先不论智能提示度,就连基本的提示也经常出不来.这里就简单总
      
    
    </summary>
    
      <category term="iOS" scheme="http://lhalcyon.com/categories/iOS/"/>
    
    
      <category term="Xcode" scheme="http://lhalcyon.com/tags/Xcode/"/>
    
  </entry>
  
  <entry>
    <title>Linux+Jenkins+Gradle构建Android参数化自动打包(二)</title>
    <link href="http://lhalcyon.com/linux-jenkins-gradle_build_android2/"/>
    <id>http://lhalcyon.com/linux-jenkins-gradle_build_android2/</id>
    <published>2017-07-20T13:45:30.000Z</published>
    <updated>2018-02-08T13:43:56.045Z</updated>
    
    <content type="html"><![CDATA[<p>在<a href="http://lhalcyon.com/linux-jenkins-gradle_build_android1/">前一篇文章</a>中,说明了在CenterOS上进行一系列的环境搭建,本文开始说明关于项目的一系列配置</p><a id="more"></a><h3 id="Jenkins项目配置"><a href="#Jenkins项目配置" class="headerlink" title="Jenkins项目配置"></a>Jenkins项目配置</h3><p>首先创建一个项目,将构建保持的天数和个数进行限制</p><blockquote><p>此处感谢后台同事提示,因为Android SDK NDK 就特别占空间了,如果构建缓存不进行限制,则很快服务器空间就会不足🤥</p></blockquote><p><img src="https://github.com/lhalcyon/RefImageRepo/raw/master/Hexo_171024/project_config_1.png" alt="jenkins_total"></p><h4 id="参数构建配置"><a href="#参数构建配置" class="headerlink" title="参数构建配置"></a>参数构建配置</h4><p><strong>打包环境</strong></p><p><img src="https://github.com/lhalcyon/RefImageRepo/raw/master/Hexo_171024/param_env.jpg" alt="jenkins_total"></p><p><strong>分支指定</strong></p><p><img src="https://github.com/lhalcyon/RefImageRepo/raw/master/Hexo_171024/param_branch.jpg" alt="jenkins_branch"></p><p><strong>email自定义接收者</strong></p><p><img src="https://github.com/lhalcyon/RefImageRepo/raw/master/Hexo_171024/param_email.jpg" alt="jenkins_email"></p><p><strong>打包时间戳</strong></p><p><img src="https://github.com/lhalcyon/RefImageRepo/raw/master/Hexo_171024/param_jenkins_time.jpg" alt="jenkins_total"></p><p>因为笔者的公司对打包的Apk名以及测试版本号时间戳显示的要求,因此需要使用动态参数</p><blockquote><p>还有其他参数均与以上类似,可自行配置</p></blockquote><p><strong>!!! 记住尤为重要的是这些参数都是Jenkins上配置的Gradle属性,得传递到App的Gradle中</strong></p><p><img src="https://github.com/lhalcyon/RefImageRepo/raw/master/Hexo_171024/gradle_script2.png" alt="jenkins_email"></p><p>这里勾选<code>Pass all job parameters as Project properties</code></p><h4 id="源码管理"><a href="#源码管理" class="headerlink" title="源码管理"></a>源码管理</h4><p>在<code>源码管理处配置Git账号</code></p><p><img src="https://github.com/lhalcyon/RefImageRepo/raw/master/Hexo_171024/git_account.jpg" alt="jenkins_total"></p><p>这里的<code>*/${BRANCH}</code>对应参数配置时的<code>BRANCH</code>.为什么这里做成选择型参数呢,是因为分支名是未知的,做成填写的话,可能压根拉不到指定分支的代码🤐</p><h4 id="Gradle构建脚本"><a href="#Gradle构建脚本" class="headerlink" title="Gradle构建脚本"></a>Gradle构建脚本</h4><p>增加构建动作</p><p>这里<code>${WORKSPACE}</code>指的是Git拉下的根目录.途中马赛克位置则为项目根目录</p><p><img src="https://github.com/lhalcyon/RefImageRepo/raw/master/Hexo_171024/gradle_script.jpg" alt="jenkins_total"></p><h4 id="蒲公英上传"><a href="#蒲公英上传" class="headerlink" title="蒲公英上传"></a>蒲公英上传</h4><p>增加构建动作,将Apk上传蒲公英</p><p><img src="https://github.com/lhalcyon/RefImageRepo/raw/master/Hexo_171024/pgyer_upload.jpg" alt="jenkins_total"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -k -F &quot;file=@$&#123;WORKSPACE&#125;/source/项目根目录/app/apks/$&#123;BUILD_PREFIX&#125;_$&#123;JENKINS_TIME&#125;_$&#123;DAY_VERSION&#125;.apk&quot; -F &quot;uKey=你的ukey&quot; -F &quot;_api_key=你的apiKey&quot; -F &quot;installType=2&quot; -F &quot;password=下载密码&quot; -F &quot;updateDescription=$&#123;DESCRIPTION&#125;&quot; https://www.pgyer.com/apiv1/app/upload</span><br></pre></td></tr></table></figure><blockquote><p> <code>${WORKSPACE}/source/项目根目录/app/apks/</code>为笔者自行修改的Apk输出目录,此处请根据自己的项目输入目录进行修改</p><p> curl命令如果使用不了可自行百度解决</p></blockquote><p>以下为蒲公英的上传Api,可以自行调整参数</p><p><img src="https://github.com/lhalcyon/RefImageRepo/raw/master/Hexo_171024/pgyer_api.png" alt="jenkins_total"></p><h4 id="邮件通知"><a href="#邮件通知" class="headerlink" title="邮件通知"></a>邮件通知</h4><p>首先还是进入Jenkins-&gt;系统设置</p><p>在<code>Jenkins Location</code>中进行配置</p><p>Jenkins URL:<code>http://10.50.0.16:8777/jenkins/</code></p><p>系统管理员邮件地址: <code>Android参数化构建&lt;aaa@163.com&gt;</code></p><blockquote><p>此处<code>Android参数化构建</code>就为邮件中的发送人名称</p></blockquote><p><img src="https://github.com/lhalcyon/RefImageRepo/raw/master/Hexo_171024/mail_config1.jpg" alt="jenkins_total"></p><p><img src="https://github.com/lhalcyon/RefImageRepo/raw/master/Hexo_171024/mail_config2.png" alt="jenkins_total"></p><blockquote><p>系统设置中的默认收件人最好不要配置为自己,因为如果配置后,自己就永远在收件人的前端,后面想发送给领导时,便不大好. 邮件的内容可自定义html内容,二维码直接线下生成蒲公英的地址然后贴在邮件内即可</p></blockquote><h3 id="App本地Gradle配置"><a href="#App本地Gradle配置" class="headerlink" title="App本地Gradle配置"></a>App本地Gradle配置</h3><p>首先在<code>gradle.properties</code>文件中进行参数化构建在非Jenkins写入情况时的缺省值配置</p><p><img src="https://github.com/lhalcyon/RefImageRepo/raw/master/Hexo_171024/gradle_properties.png" alt="jenkins_total"></p><p>在未使用Jenkins构建的情况下应用会读本地的这些变量值</p><p>然后在<code>app</code>module下的<code>build.gradle</code>中进行配置写入的值配置</p><p><img src="https://github.com/lhalcyon/RefImageRepo/raw/master/Hexo_171024/app_gradle.jpg" alt="jenkins_total"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">//修改生成的apk名字及输出目录</span><br><span class="line">applicationVariants.all &#123; variant -&gt;</span><br><span class="line">    variant.outputs.each &#123; output -&gt;</span><br><span class="line">        def newName</span><br><span class="line">        def oldFile = output.outputFile</span><br><span class="line">        def outDirectory = oldFile.parent</span><br><span class="line">        def buildPrefix</span><br><span class="line">        def showVersion</span><br><span class="line">        if (variant.buildType.name == &apos;debug&apos;) &#123;</span><br><span class="line">            buildPrefix = BUILD_PREFIX</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            buildPrefix = BUILD_PREFIX_RELEASE</span><br><span class="line">        &#125;</span><br><span class="line">        def jenkinsTime = JENKINS_TIME</span><br><span class="line">        if (variant.buildType.name == &apos;debug&apos;) &#123;</span><br><span class="line">            showVersion = buildPrefix + &apos;_&apos; + jenkinsTime + &apos;_&apos; + DAY_VERSION</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            showVersion = APP_VERSION</span><br><span class="line">        &#125;</span><br><span class="line">        resValue(&quot;string&quot;, &apos;fund_app_version&apos;, showVersion)</span><br><span class="line">        def tempFile = file(&quot;build.gradle&quot;)</span><br><span class="line">        outDirectory = tempFile.parent + &apos;/apks&apos;</span><br><span class="line">        if (IS_JENKINS) &#123;</span><br><span class="line">            newName = buildPrefix + &apos;_&apos; + jenkinsTime + &apos;_&apos; + DAY_VERSION + &apos;.apk&apos;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line"></span><br><span class="line">            newName = &apos;android-v&apos; +</span><br><span class="line">                    APP_VERSION + &apos;-&apos; + variant.productFlavors[0].name + &apos;-&apos; + variant.buildType.name + &apos;.apk&apos;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        output.outputFile = new File(outDirectory, newName)</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>系统默认的输入路径是在<code>build</code>文件夹中,层级比较深.此处笔者将apk的输出路径进行了修改并且对apk的输出名称进行了调整</p><p>至此,Jenkins参数自动化构建已经完成!😀</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在&lt;a href=&quot;http://lhalcyon.com/linux-jenkins-gradle_build_android1/&quot;&gt;前一篇文章&lt;/a&gt;中,说明了在CenterOS上进行一系列的环境搭建,本文开始说明关于项目的一系列配置&lt;/p&gt;
    
    </summary>
    
      <category term="Android" scheme="http://lhalcyon.com/categories/Android/"/>
    
    
      <category term="Jenkins" scheme="http://lhalcyon.com/tags/Jenkins/"/>
    
      <category term="Android" scheme="http://lhalcyon.com/tags/Android/"/>
    
      <category term="Linux" scheme="http://lhalcyon.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux+Jenkins+Gradle构建Android参数化自动打包(一)</title>
    <link href="http://lhalcyon.com/linux-jenkins-gradle_build_android1/"/>
    <id>http://lhalcyon.com/linux-jenkins-gradle_build_android1/</id>
    <published>2017-07-07T12:40:25.000Z</published>
    <updated>2018-02-06T12:50:41.115Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><div class="note info"><p>关于Jenkins部署安卓自动打包有很多好处,可以配置参数进行构建,选择打包环境、设置App版本、设置加密开关等.起初,笔者也是参考了一些网上的教程,将自动化打包构建在了自己的windows开发机器上,而将Jenkins自动构建Android部署在服务器上和本机上在环境构建方面略有不同,坑略多.</p><p>参数化构建的过程却是很便捷,但是部署在本机上自动化打包其实是个会增加打包时长的工作,因为自动化打包会首先去代码仓库拉取代码到本地,然后再开始打包,这个过程会比直接用AS打包慢很多.后来提出需求,要将自动化打包配置到服务器上.运维就提供了一台<code>Linux</code>服务器,并且上面已配置后台的自动化打包环境,用的是<code>Jdk1.7</code>和比较旧版本的<code>Jenkins</code>,于是我们得另行使用独立的安装的环境.</p></div><h3 id="最终结果"><a href="#最终结果" class="headerlink" title="最终结果"></a>最终结果</h3><p>最终我们要实现的是实现Jenkins上面配置<strong>应用版本号</strong>、<strong>Git分支</strong>、<strong>应用渠道</strong>、<strong>请求基地址</strong>、<strong>应用环境</strong>等参数,进行一键参数化构建打包上传至蒲公英并发送邮件通知给<strong>自定义的接收者</strong></p><p>最终实现参数化配置大致如下所示:</p><p><img src="https://github.com/lhalcyon/RefImageRepo/raw/master/Hexo_171024/jenkins_total.png" alt="jenkins_total"></p><p>发送邮件(邮件内容较长,进行了相应缩小)</p><p><img src="https://github.com/lhalcyon/RefImageRepo/raw/master/Hexo_171024/jenkins_result.jpg" alt="jenkins_total"></p><a id="more"></a><h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><p><strong>所需环境</strong></p><ul><li>新版Jenkins(需能安装参数化构建插件)</li><li>Tomcat</li><li>新版Jenkins</li><li>Android SDK</li><li>Android NDK</li><li>aapt</li><li>Git</li><li>Gradle</li><li>其它(视自身项目所需)</li></ul><p><strong>CenterOS64位已有环境</strong></p><ul><li>Jdk1.7</li><li>Tomcat</li><li>旧版Jenkins</li></ul><h4 id="1-Jdk安装及配置"><a href="#1-Jdk安装及配置" class="headerlink" title="1. Jdk安装及配置"></a>1. Jdk安装及配置</h4><p>由于Android开发使用的 <code>Jdk1.8</code>,因此不能复用服务器上现有的Jdk </p><p>首先去<a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html" target="_blank" rel="noopener">Oracle Downloads</a>下载 <strong>Jdk for Linux</strong>.笔者下载的是<code>jdk-8u131-linux-x64.tar.gz</code></p><p>上传到服务器,进入相关目录解压</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf jdk-8u131-linux-x64.tar.gz</span><br></pre></td></tr></table></figure><p>可将目录移至其他目录.其实最好在解压前就将压缩包移至目标目录</p><p><strong>Jdk环境变量配置</strong>(可选)</p><p>由于后台使用了<code>JAVA_HOME</code>、<code>JENKINS_HOME</code>等一系列环境变量名,所以服务器上默认调用的会是他们的环境变量,我们开发的一套只能在自己的Tomcat、Jenkins中进行指定,具体下文会进行说明</p><h4 id="2-Tomcat安装及配置"><a href="#2-Tomcat安装及配置" class="headerlink" title="2. Tomcat安装及配置"></a>2. Tomcat安装及配置</h4><p>首先去<a href="http://tomcat.apache.org/" target="_blank" rel="noopener">Tomcat Download</a>选择版本进行下载.这里笔者选择的是<code>apache-tomcat-7.0.79.tar.gz</code></p><p>上传到服务器,进入相关目录解压</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxv -f apache-tomcat-7.0.79.tar.gz</span><br></pre></td></tr></table></figure><h5 id="a-端口修改"><a href="#a-端口修改" class="headerlink" title="a.端口修改"></a>a.端口修改</h5><p>由于常规tomcat端口被已有tomcat占用,因此我们需要修改端口</p><p>进入<code>conf</code>目录下的<code>server.xml</code>修改,此处笔者是用<strong>Vim</strong>修改.不会用的同学请出门左转度娘🤔</p><p>主要修改的是,设置为自定义端口号</p><ul><li><code>Tomcat admin port</code> 即文件最上面的端口号</li><li><code>Http/1.1 port</code> 连接访问的端口号</li><li><code>AJP/1.3 port</code></li></ul><h5 id="b-环境配置"><a href="#b-环境配置" class="headerlink" title="b.环境配置"></a>b.环境配置</h5><p>指定Tomcat运行时环境,在<code>bin</code>目录下修改<code>setclasspath.sh</code> 以下是笔者的环境,请自行替换路径</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export JAVA_HOME=/usr/android/java/jdk1.8.0_131</span><br><span class="line">export JRE_HOME=/usr/android/java/jdk1.8.0_131/jre</span><br><span class="line">export JENKINS_HOME=/home/android/jenkins</span><br></pre></td></tr></table></figure><h4 id="3-Gradle安装及配置"><a href="#3-Gradle安装及配置" class="headerlink" title="3. Gradle安装及配置"></a>3. Gradle安装及配置</h4><p>首先去<a href="http://services.gradle.org/distributions/" target="_blank" rel="noopener">Gradle Download</a>下载对应Gradle版本,笔者使用到的是<code>gradle-3.3-all.zip</code></p><p>上传到指定目录解压</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unzip gradle-3.3-all.zip</span><br></pre></td></tr></table></figure><p>然后添加环境变量<code>vim /etc/profile</code>,在环境变量配置处增加一句</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export GRADLE_HOME=/home/gradle-3.3/bin</span><br></pre></td></tr></table></figure><h4 id="4-Android-Sdk-For-Linux-安装及更新"><a href="#4-Android-Sdk-For-Linux-安装及更新" class="headerlink" title="4. Android Sdk For Linux 安装及更新"></a>4. Android Sdk For Linux 安装及更新</h4><p>这里下载Sdk解压都不是难点.难点在于安装之后更新的问题.</p><p><img src="https://github.com/lhalcyon/RefImageRepo/raw/master/Hexo_171024/sdk_manager_accept_license.png" alt="sdk_manager_agree_license"></p><p>用AS或者Eclipse的同学肯定接触过<code>Sdk Manager</code>,此处选择更新后要手动点<code>Accept License</code>才能启动更新.但是在Linux下没有界面化的勾选可用.因此需要用脚本来更新.网上有说复制<code>License</code>的方法笔者试了无效,也许是姿势不对吧,此处也是踩了很久的坑才搜出来的解决方法:</p><p><a href="http://blog.csdn.net/yygydjkthh/article/details/48263973" target="_blank" rel="noopener">更新Sdk方法传送门</a> 这里先感谢下该作者👏</p><p>这里也为不愿跳传送门的同学说明一下,就几个步骤.</p><p><strong>a.查看可更新列表</strong></p><p>在Sdk的<code>tools</code>目录使用<code>./android list sdk --all</code>查看远程服务器提供的Sdk包的序号,记录想要更新的Sdk序号</p><p><strong>b.编辑脚本</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/expect</span><br><span class="line">set timeout -1</span><br><span class="line">spawn /usr/local/android-sdk-linux/tools/android update sdk -u -a -t 1,2,3,24,25,26,27,28,30,95,96,102,103,104,105,106,107</span><br><span class="line">expect &#123;</span><br><span class="line">    &quot;Do you accept the license&quot; &#123; exp_send &quot;y\r&quot; ; exp_continue &#125;</span><br><span class="line">    eof</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此处<code>1,2,3,...</code>为需要下载的Sdk序号</p><p><strong>c.运行脚本</strong></p><p>待脚本跑完,sdk就更新完毕了</p><blockquote><p>注意此处脚本用到了<code>expect</code>,需要在服务器上安装,此处提供<a href="http://www.centoscn.com/image-text/install/2014/0310/2532.html" target="_blank" rel="noopener">expect安装传送门</a></p></blockquote><h4 id="5-Ndk-for-Linux安装"><a href="#5-Ndk-for-Linux安装" class="headerlink" title="5. Ndk for Linux安装"></a>5. Ndk for Linux安装</h4><p>安装较简单,后续需配置Jenkins系统变量,下文会进行说明</p><blockquote><p>项目因用到了Jni,需要安装Ndk,可是后期发现在项目里每次均去编译jni导致项目的compile sdk不能使用高于23的,致使Instant Run等功能使用,很影响开发效率.后期改在项目外编译好了静态库然后放入项目中,这样不会限制项目自身的SDK版本,因此<strong>若未使用JNI的项目,则可跳过此步骤</strong></p></blockquote><h4 id="6-Git安装及环境变量配置"><a href="#6-Git安装及环境变量配置" class="headerlink" title="6. Git安装及环境变量配置"></a>6. Git安装及环境变量配置</h4><p>下载安装并配置环境变量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export GIT_HOME=/usr/android/git-2.12.2/bin</span><br></pre></td></tr></table></figure><h4 id="7-Jenkins安装及配置"><a href="#7-Jenkins安装及配置" class="headerlink" title="7. Jenkins安装及配置"></a>7. Jenkins安装及配置</h4><h5 id="a-下载"><a href="#a-下载" class="headerlink" title="a. 下载"></a>a. 下载</h5><p>下载Jenkins将war包放入Tomcat的<code>webapps</code>目录下,启动tomcat</p><p>然后在地址栏输入路径<code>http://localhost:/8777</code> 其中<code>8777</code>为第二步中自定义的端口号</p><h5 id="b-插件安装"><a href="#b-插件安装" class="headerlink" title="b. 插件安装"></a>b. 插件安装</h5><p>然后安装插件(基本参考网上的)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">1.Branch API Plugin</span><br><span class="line">2.build timeout plugin</span><br><span class="line">3.build-name-setter</span><br><span class="line">4.Credentials Binding Plugin</span><br><span class="line">5.description setter plugin</span><br><span class="line">6.Dynamic Parameter Plug-in</span><br><span class="line">7.Environment Injector Plugin</span><br><span class="line">9.Git plugin</span><br><span class="line">10.GIT server Plugin</span><br><span class="line">11.Gradle Plugin</span><br><span class="line">12.Git Parameter Plug-In</span><br><span class="line">13.Pipeline: Basic Steps</span><br><span class="line">14.Pipeline: Build Step</span><br><span class="line">15.Pipeline: Input Step</span><br><span class="line">16.Pipeline: Nodes and Processes</span><br><span class="line">17.Pipeline: Stage Step</span><br><span class="line">18.Scriptler</span><br><span class="line">19.Workspace Cleanup Plugin</span><br><span class="line">20.Post-Build Script Plug-in</span><br><span class="line">21.Email Extension Plugin</span><br><span class="line">22.SSH Slaves plugin</span><br><span class="line">23.Timestamper</span><br><span class="line">(不明为什么少8)</span><br></pre></td></tr></table></figure><p>因为Jenkins版本不同,实际使用中发现缺失不少</p><p>以下附上笔者所安装的所有插件(若无问题的可跳过)</p><p><img src="https://github.com/lhalcyon/RefImageRepo/raw/master/Hexo_171024/jenkins_plugin1.jpg" alt="jenkins_plugin_1"></p><p><img src="https://github.com/lhalcyon/RefImageRepo/raw/master/Hexo_171024/jenkins_plugin2.jpg" alt="jenkins_plugin_2"></p><p><img src="https://github.com/lhalcyon/RefImageRepo/raw/master/Hexo_171024/jenkins_plugin3.jpg" alt="jenkins_plugin_3"></p><p><img src="https://github.com/lhalcyon/RefImageRepo/raw/master/Hexo_171024/jenkins_plugin4.jpg" alt="jenkins_plugin_4"></p><p><img src="https://github.com/lhalcyon/RefImageRepo/raw/master/Hexo_171024/jenkins_plugin5.jpg" alt="jenkins_plugin_5"></p><p><img src="https://github.com/lhalcyon/RefImageRepo/raw/master/Hexo_171024/jenkins_plugin6.jpg" alt="jenkins_plugin_6"></p><p><img src="https://github.com/lhalcyon/RefImageRepo/raw/master/Hexo_171024/jenkins_plugin7.jpg" alt="jenkins_plugin_7"></p><p><img src="https://github.com/lhalcyon/RefImageRepo/raw/master/Hexo_171024/jenkins_plugin8.jpg" alt="jenkins_plugin_8"></p><h5 id="c-环境变量配置"><a href="#c-环境变量配置" class="headerlink" title="c. 环境变量配置"></a>c. 环境变量配置</h5><p><strong>环境变量</strong></p><p>首先点击<code>系统管理</code>-&gt;<code>系统设置</code>配置Jdk、Android Sdk、Gradle、Android Ndk环境变量(此处也可配置Git目录,笔者是将Git目录配置在Linux环境变量中了)</p><p><img src="https://github.com/lhalcyon/RefImageRepo/raw/master/Hexo_171024/jenkins_config.png" alt="jenkins_plugin_8"></p><p><em>其它如邮件相关配置的在下篇会说明</em></p><p>至此环境大体上配置已经完成,下篇即可进入项目相关配置</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;div class=&quot;note info&quot;&gt;&lt;p&gt;关于Jenkins部署安卓自动打包有很多好处,可以配置参数进行构建,选择打包环境、设置App版本、设置加密开关等.起初,笔者也是参考了一些网上的教程,将自动化打包构建在了自己的windows开发机器上,而将Jenkins自动构建Android部署在服务器上和本机上在环境构建方面略有不同,坑略多.&lt;/p&gt;
&lt;p&gt;参数化构建的过程却是很便捷,但是部署在本机上自动化打包其实是个会增加打包时长的工作,因为自动化打包会首先去代码仓库拉取代码到本地,然后再开始打包,这个过程会比直接用AS打包慢很多.后来提出需求,要将自动化打包配置到服务器上.运维就提供了一台&lt;code&gt;Linux&lt;/code&gt;服务器,并且上面已配置后台的自动化打包环境,用的是&lt;code&gt;Jdk1.7&lt;/code&gt;和比较旧版本的&lt;code&gt;Jenkins&lt;/code&gt;,于是我们得另行使用独立的安装的环境.&lt;/p&gt;&lt;/div&gt;
&lt;h3 id=&quot;最终结果&quot;&gt;&lt;a href=&quot;#最终结果&quot; class=&quot;headerlink&quot; title=&quot;最终结果&quot;&gt;&lt;/a&gt;最终结果&lt;/h3&gt;&lt;p&gt;最终我们要实现的是实现Jenkins上面配置&lt;strong&gt;应用版本号&lt;/strong&gt;、&lt;strong&gt;Git分支&lt;/strong&gt;、&lt;strong&gt;应用渠道&lt;/strong&gt;、&lt;strong&gt;请求基地址&lt;/strong&gt;、&lt;strong&gt;应用环境&lt;/strong&gt;等参数,进行一键参数化构建打包上传至蒲公英并发送邮件通知给&lt;strong&gt;自定义的接收者&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;最终实现参数化配置大致如下所示:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://github.com/lhalcyon/RefImageRepo/raw/master/Hexo_171024/jenkins_total.png&quot; alt=&quot;jenkins_total&quot;&gt;&lt;/p&gt;
&lt;p&gt;发送邮件(邮件内容较长,进行了相应缩小)&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://github.com/lhalcyon/RefImageRepo/raw/master/Hexo_171024/jenkins_result.jpg&quot; alt=&quot;jenkins_total&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Android" scheme="http://lhalcyon.com/categories/Android/"/>
    
    
      <category term="Jenkins" scheme="http://lhalcyon.com/tags/Jenkins/"/>
    
      <category term="Android" scheme="http://lhalcyon.com/tags/Android/"/>
    
      <category term="Linux" scheme="http://lhalcyon.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>混编:Swift调用Objective-C</title>
    <link href="http://lhalcyon.com/hybrid-compile_swift2oc/"/>
    <id>http://lhalcyon.com/hybrid-compile_swift2oc/</id>
    <published>2017-06-20T08:02:11.000Z</published>
    <updated>2018-02-04T08:01:52.836Z</updated>
    
    <content type="html"><![CDATA[<h3 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h3><ul><li>Xcode 8.3.3</li><li>Swift3.+</li></ul><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><h4 id="1-创建混编桥接头文件"><a href="#1-创建混编桥接头文件" class="headerlink" title="1.创建混编桥接头文件"></a>1.创建混编桥接头文件</h4><p><img src="https://github.com/lhalcyon/RefImageRepo/raw/master/Hexo_170620/hybrid-compile.png" alt="hybrid-compile"></p><p>名称随便取,最好能和普通header文件做区别</p><h4 id="2-项目配置桥接文件"><a href="#2-项目配置桥接文件" class="headerlink" title="2.项目配置桥接文件"></a>2.项目配置桥接文件</h4><ol><li>点击工程,选中<code>Build Settings</code>,子选项勾选<code>All</code></li><li>在下面配置中找到(或者搜索)<code>Swift Compile - General</code></li><li>配置混编桥接头文件</li></ol><p><img src="https://github.com/lhalcyon/RefImageRepo/raw/master/Hexo_170620/bridge-config.png" alt="bridge-config"></p><p>点开图中红圈区域进行配置,如我所建的文件在工程里路径为<code>MyProject/Hybrid-Compile.h</code></p><p>则配置也应是这个路径</p><p><img src="https://github.com/lhalcyon/RefImageRepo/raw/master/Hexo_170620/path-config.png" alt="path-config"></p><p>保存后在该头文件中引用相应OC类头文件即可在Swift中调用</p><h3 id="引用注意"><a href="#引用注意" class="headerlink" title="引用注意"></a>引用注意</h3><p>如果是项目内的OC文件直接引用即可</p><p>如果是<code>Pod</code>引用的库中的OC文件则需要带上其<code>Pod</code>中的路径</p><p><img src="https://github.com/lhalcyon/RefImageRepo/raw/master/Hexo_170620/reference.png" alt="reference"></p><p><img src="https://github.com/lhalcyon/RefImageRepo/raw/master/Hexo_170620/reference1.png" alt="reference1"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;headerlink&quot; title=&quot;环境&quot;&gt;&lt;/a&gt;环境&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Xcode 8.3.3&lt;/li&gt;
&lt;li&gt;Swift3.+&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;步骤&quot;&gt;&lt;a href=&quot;#步
      
    
    </summary>
    
      <category term="iOS" scheme="http://lhalcyon.com/categories/iOS/"/>
    
    
      <category term="Swift" scheme="http://lhalcyon.com/tags/Swift/"/>
    
      <category term="Xcode" scheme="http://lhalcyon.com/tags/Xcode/"/>
    
  </entry>
  
</feed>
